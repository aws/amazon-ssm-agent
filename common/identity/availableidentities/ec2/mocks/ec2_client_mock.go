// Code generated by mockery v2.4.0. DO NOT EDIT.

package mocks

import (
	ec2metadata "github.com/aws/aws-sdk-go/aws/ec2metadata"

	mock "github.com/stretchr/testify/mock"
)

// IEC2MdsSdkClientMock is an autogenerated mock type for the IEC2MdsSdkClient type
type IEC2MdsSdkClientMock struct {
	mock.Mock
}

// GetInstanceIdentityDocument provides a mock function with given fields:
func (_m *IEC2MdsSdkClientMock) GetInstanceIdentityDocument() (ec2metadata.EC2InstanceIdentityDocument, error) {
	ret := _m.Called()

	var r0 ec2metadata.EC2InstanceIdentityDocument
	if rf, ok := ret.Get(0).(func() ec2metadata.EC2InstanceIdentityDocument); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(ec2metadata.EC2InstanceIdentityDocument)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMetadata provides a mock function with given fields: _a0
func (_m *IEC2MdsSdkClientMock) GetMetadata(_a0 string) (string, error) {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Region provides a mock function with given fields:
func (_m *IEC2MdsSdkClientMock) Region() (string, error) {
	ret := _m.Called()

	var r0 string
	if rf, ok := ret.Get(0).(func() string); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
