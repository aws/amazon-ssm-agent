// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	ssm "github.com/aws/aws-sdk-go/service/ssm"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// IClient is an autogenerated mock type for the IClient type
type IClient struct {
	mock.Mock
}

// RequestManagedInstanceRoleToken provides a mock function with given fields: fingerprint
func (_m *IClient) RequestManagedInstanceRoleToken(fingerprint string) (*ssm.RequestManagedInstanceRoleTokenOutput, error) {
	ret := _m.Called(fingerprint)

	var r0 *ssm.RequestManagedInstanceRoleTokenOutput
	if rf, ok := ret.Get(0).(func(string) *ssm.RequestManagedInstanceRoleTokenOutput); ok {
		r0 = rf(fingerprint)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ssm.RequestManagedInstanceRoleTokenOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(fingerprint)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// UpdateManagedInstancePublicKey provides a mock function with given fields: publicKey, publicKeyType
func (_m *IClient) UpdateManagedInstancePublicKey(publicKey string, publicKeyType string) (*ssm.UpdateManagedInstancePublicKeyOutput, error) {
	ret := _m.Called(publicKey, publicKeyType)

	var r0 *ssm.UpdateManagedInstancePublicKeyOutput
	if rf, ok := ret.Get(0).(func(string, string) *ssm.UpdateManagedInstancePublicKeyOutput); ok {
		r0 = rf(publicKey, publicKeyType)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ssm.UpdateManagedInstancePublicKeyOutput)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(publicKey, publicKeyType)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewIClient creates a new instance of IClient. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewIClient(t testing.TB) *IClient {
	mock := &IClient{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
