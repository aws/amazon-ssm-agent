// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	appconfig "github.com/aws/amazon-ssm-agent/agent/appconfig"
	log "github.com/aws/amazon-ssm-agent/agent/log"
	"github.com/aws/amazon-ssm-agent/core/app/context"
	mock "github.com/stretchr/testify/mock"
)

// ICoreAgentContext is an autogenerated mock type for the ICoreAgentContext type
type ICoreAgentContext struct {
	mock.Mock
}

// AppConfig provides a mock function with given fields:
func (_m *ICoreAgentContext) AppConfig() *appconfig.SsmagentConfig {
	ret := _m.Called()

	var r0 *appconfig.SsmagentConfig
	if rf, ok := ret.Get(0).(func() *appconfig.SsmagentConfig); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*appconfig.SsmagentConfig)
		}
	}

	return r0
}

// AppVariable provides a mock function with given fields:
func (_m *ICoreAgentContext) AppVariable() *context.AppVariable {
	ret := _m.Called()

	var r0 *context.AppVariable
	if rf, ok := ret.Get(0).(func() *context.AppVariable); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*context.AppVariable)
		}
	}

	return r0
}

// CurrentContext provides a mock function with given fields:
func (_m *ICoreAgentContext) CurrentContext() []string {
	ret := _m.Called()

	var r0 []string
	if rf, ok := ret.Get(0).(func() []string); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]string)
		}
	}

	return r0
}

// Log provides a mock function with given fields:
func (_m *ICoreAgentContext) Log() log.T {
	ret := _m.Called()

	var r0 log.T
	if rf, ok := ret.Get(0).(func() log.T); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(log.T)
		}
	}

	return r0
}

// With provides a mock function with given fields: _a0
func (_m *ICoreAgentContext) With(_a0 string) context.ICoreAgentContext {
	ret := _m.Called(_a0)

	var r0 context.ICoreAgentContext
	if rf, ok := ret.Get(0).(func(string) context.ICoreAgentContext); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(context.ICoreAgentContext)
		}
	}

	return r0
}
